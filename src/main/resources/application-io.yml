# === INPUT ===

# items
spring.cloud.stream.bindings.items:
  destination: items
  consumer:
    useNativeDecoding: true
    headerMode: raw
spring.cloud.stream.kafka.streams.bindings.items:
  consumer:
    keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
    valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde

# aggregated-offers
spring.cloud.stream.bindings.aggregated-offers-in:
  destination: aggregated-offers
  consumer:
    useNativeDecoding: true
    headerMode: raw
spring.cloud.stream.kafka.streams.bindings.aggregated-offers-in:
  consumer:
    keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
    valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde

# === OUTPUT ===

spring.cloud.stream.bindings.output:
  destination: output
  producer:
    useNativeEncoding: true
    headerMode: raw
spring.cloud.stream.kafka.streams.bindings.output:
  producer:
    keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
    valueSerde: org.apache.kafka.common.serialization.Serdes$StringSerde

spring.cloud.stream.kafka.streams.binder:
  brokers: localhost #192.168.99.100
  zkNodes: localhost #192.168.99.100
  configuration:
    default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
    commit.interval.ms: 1000
    application.id: io-app

spring.cloud.stream.kafka.binder.autoConfigureTopics: false